services:
  # Websocket driver
  loop:
    factory: ['\React\EventLoop\Factory', 'create']
    class: '\React\EventLoop\LoopInterface'

  socket_factory:
    class: 'Syntax\WebSocket\ServerSocket\SocketFactory'
    arguments: ['%bind_host%', '%bind_port%']

  socket:
    factory: ['@socket_factory', 'createSocket']
    arguments: ['@loop']
    class: '\React\Socket\Server'

  server:
    class: '\Syntax\WebSocket\ServerSocket\ServerWrapper'
    arguments: ['@loop', '@socket', '@message_component']

  message_component:
    class: '\Syntax\WebSocket\MessageComponent'
    arguments: ['@clients_inmemory', '@controllers_dispatcher', '@initiator']

  clients_inmemory:
    class: '\Syntax\WebSocket\InMemory\Clients'

  controllers_dispatcher:
    class: '\Syntax\WebSocket\ControllersDispatcher'

  # AVR module
  avr:
    class: '\Syntax\Service\UC\AVRService'
    arguments: ['%avr_host%', '%avr_port%', '%avr_timeout%', '@loop']

  avr.led:
    class: '\Syntax\Service\UC\LED'
    arguments: ['@avr']

  avr.relays:
    class: '\Syntax\Service\UC\Relays'
    arguments: ['@avr']

  # Queue
  queue:
    class: '\Syntax\Service\Queue'
    arguments: ['@loop', '%queue_interval%']

  queue.state_executor:
    class: '\Syntax\Service\Executor\ChangeStateExecutor'
    arguments: ['@avr.relays']
    calls:
      - ['setClients', ['@clients_inmemory']]

  queue.color_executor:
    class: '\Syntax\Service\Executor\ChangeColorExecutor'
    arguments: ['@avr.led']
    calls:
      - ['setClients', ['@clients_inmemory']]

  # Logger
  logger:
    class: '\Syntax\Service\Logger'

  # Initiator
  initiator:
    class: '\Syntax\Service\Initiator'
    arguments: ['@avr.led', '@avr.relays']

  # Controllers
  ChangeStateController:
    class: '\Syntax\Controller\ChangeStateController'
    arguments: ['@queue', '@clients_inmemory']

  ChangeColorController:
      class: '\Syntax\Controller\ChangeColorController'
      arguments: ['@queue', '@clients_inmemory']
